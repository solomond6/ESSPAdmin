
@{
    ViewBag.Title = "Index";
}
<link href="~/Content/jquery-ui.min.css" rel="stylesheet" />
<link href="~/Content/selectize.default.css" rel="stylesheet" />

<div class="m-grid__item m-grid__item--fluid m-wrapper">
    <div class="m-subheader ">
        <div class="d-flex align-items-center">
            <div class="mr-auto">
                <h3 class="m-subheader__title ">
                    Returned Schedule
                </h3>
                <ul class="m-subheader__breadcrumbs m-nav m-nav--inline">
                    <li class="m-nav__item m-nav__item--home">
                        <a href="#" class="m-nav__link m-nav__link--icon">
                            <i class="m-nav__link-icon la la-home"></i>
                        </a>
                    </li>
                    <li class="m-nav__separator">
                        -
                    </li>
                    <li class="m-nav__item">
                        <a href="" class="m-nav__link">
                            <span class="m-nav__link-text">
                                Actions
                            </span>
                        </a>
                    </li>
                    <li class="m-nav__separator">
                        -
                    </li>
                    <li class="m-nav__item">
                        <a href="" class="m-nav__link">
                            <span class="m-nav__link-text">
                                New
                            </span>
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <div class="m-content">
        @if (TempData["error"] != null)
        {
            <div class="m-alert m-alert--icon m-alert--icon-solid m-alert--outline alert alert-danger alert-dismissible fade show m--margin-bottom-30" role="alert">
                <div class="m-alert__icon">
                    <i class="flaticon-exclamation-1"></i>
                    <span></span>
                </div>
                <div class="m-alert__text">
                    @TempData["error"]
                </div>
                <div class="m-alert__close">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"></button>
                </div>
            </div>
        }

        @if (TempData["msg"] != null)
        {
            <div class="m-alert m-alert--icon m-alert--icon-solid m-alert--outline alert alert-success alert-dismissible fade show m--margin-bottom-30" role="alert">
                <div class="m-alert__icon">
                    <i class="flaticon-exclamation-1"></i>
                    <span></span>
                </div>
                <div class="m-alert__text">
                    @TempData["msg"]
                </div>
                <div class="m-alert__close">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"></button>
                </div>
            </div>
        }
        <div class="row">
            <div class="col-md-7">
                <div class="m-portlet m-portlet--mobile">
                    <div class="m-portlet__head">
                        <div class="m-portlet__head-caption">
                            <div class="m-portlet__head-title">
                                <h3 class="m-portlet__head-text">
                                    New Returned Schedule
                                </h3>
                            </div>
                        </div>
                    </div>

                    <div class="m-portlet__body">
                        <form name="request" action='@Url.Action("Create", "ReturnedSchedule")' method="post" enctype="multipart/form-data" class="ReturnedScheduleForm">
                            @Html.AntiForgeryToken()
                            <div class="modal-body">
                                <div class="form-group">
                                    <label for="recipient-name" class="col-form-label">Category:</label>
                                    <select name="requestCategory" id="requestCategory" class="form-control" required>
                                        <option value="">-Select A Complaint category-</option>
                                    </select>
                                </div>
                                <div class="m-form__help description"></div>
                                <div class="m-form__help documentLinks"></div>
                                <div class="form-group ui-widget">
                                    <small>Search Employer Name by typing the first 3 characters, then selecting to get the Employer's  Code</small>
                                    <div class="row">
                                        <div class="col">
                                            <label for="message-text" class="col-form-label">Employer Name:</label>
                                            <input type="text" name="EmployerCode1" class="form-control m-input tt-input" id="EmployerCode" placeholder="Provide the employer code" required />
                                        </div>
                                        <div class="col">
                                            <label for="message-text" class="col-form-label">Employer Code:</label>
                                            <input type="text" name="EmployerCode" class="form-control" id="EmployerCode1" readonly required />
                                        </div>
                                    </div>
                                </div>
                                <hr />
                                <div class="m-form__group form-group">
                                    <label for="">Reason(s) for rejection</label>
                                    <div class="m-checkbox-inline">
                                        <label class="m-checkbox">
                                            <input type="checkbox" name="reasons[]" value="Unclear narration"> Unclear narration
                                            <span></span>
                                        </label>
                                        <label class="m-checkbox">
                                            <input type="checkbox" name="reasons[]" value="Duplicate contribution"> Duplicate contribution
                                            <span></span>
                                        </label>
                                        <label class="m-checkbox">
                                            <input type="checkbox" name="reasons[]" value="Invalid Contribution"> Invalid Contribution
                                            <span></span>
                                        </label>
                                        <label class="m-checkbox">
                                            <input type="checkbox" name="reasons[]" value="Under remittance"> Under remittance
                                            <span></span>
                                        </label>
                                        <label class="m-checkbox">
                                            <input type="checkbox" name="reasons[]" value="Over remittance"> Over remittance
                                            <span></span>
                                        </label>
                                        <label class="m-checkbox">
                                            <input type="checkbox" name="reasons[]" value="Negative contribution"> Negative contribution
                                            <span></span>
                                        </label>
                                        <label class="m-checkbox">
                                            <input type="checkbox" name="reasons[]" value="No PENCOM Code"> No PENCOM Code
                                            <span></span>
                                        </label>
                                    </div>
                                </div>
                                <hr />
                                <div class="m-form__group form-group">
                                    <label>Classification</label>
                                    <div class="m-radio-list">
                                        <label class="m-radio m-radio--success">
                                            <input type="radio" name="classification" value="Full scheduled returned - Whole Payment Returned" required> Full scheduled returned - Whole Payment Returned
                                            <span></span>
                                        </label>
                                        <label class="m-radio m-radio--brand">
                                            <input type="radio" name="classification" value="Part of scheduled returned – Part Payment Returned" required> Part of scheduled returned – Part Payment Returned
                                            <span></span>
                                        </label>
                                    </div>
                                </div>
                                <hr />
                                <div class="controls row">
                                    <div class="col">
                                        <label>Narration</label>
                                    </div>
                                    <div class="col">
                                        <label>Amount on schedule</label>
                                    </div>
                                    <div class="col">
                                        <label>Amount returned</label>
                                    </div>
                                </div>
                                
                                <div class="row narations">
                                    <div class="col nopadding">
                                        <input type="text" class="form-control narration" id="narration" name="narration" value="" placeholder="Narration">
                                    </div>
                                    <div class="col nopadding">
                                        <input type="number" class="form-control" id="AmountSchedule" name="AmountSchedule" value="" min="0" placeholder="Amount on schedule">
                                    </div>
                                    <div class="col nopadding">
                                        <input type="number" class="form-control" id="AmountReturned" name="AmountReturned" value="" min="0" placeholder="Amount returned">
                                    </div>
                                    <!--<div class="col nopadding">
                                        <button class="btn btn-success" type="button" onclick="narration_fields();"> <span class="flaticon-plus" aria-hidden="true"></span> </button>
                                    </div>-->
                                </div>
                                <br/>
                                <div id="narration_fields">
                                </div>
                                <hr />
                                <div class="form-group">
                                    <label for="message-text" class="col-form-label">Attachment:</label>
                                    <small>File size must be less than 4mb and .csv file type only accepted. </small>
                                    <div class="field_wrapper">
                                        <div class="input-group mb-3">
                                            <div class="custom-file">
                                                <input type="file" name="attachFile" class="custom-file-input" id="iUpload01" onchange="readURL01(this);" required>
                                                <label class="custom-file-label" for="inputGroupFile02">Choose file</label>
                                            </div>
                                        </div>
                                        <input type="hidden" name="convertedFile" class="form-control" id="base01" />
                                        <input type="hidden" name="fileExt" class="form-control" id="ext01" />
                                    </div>
                                    <div class="field_wrapper">
                                        <div class="input-group mb-3">
                                            <div class="custom-file">
                                                <input type="file" name="attachFile1" class="custom-file-input" id="iUpload02" onchange="readURL02(this);">
                                                <label class="custom-file-label" for="inputGroupFile02">Choose file</label>
                                            </div>
                                        </div>
                                        <input type="hidden" name="convertedFile1" class="form-control" id="base02" />
                                        <input type="hidden" name="fileExt1" class="form-control" id="ext02" />
                                    </div>
                                    <div class="field_wrapper">
                                        <div class="input-group mb-3">
                                            <div class="custom-file">
                                                <input type="file" name="attachFile2" class="custom-file-input" id="iUpload03" onchange="readURL03(this);">
                                                <label class="custom-file-label" for="inputGroupFile02">Choose file</label>
                                            </div>
                                        </div>
                                        <input type="hidden" name="convertedFile2" class="form-control" id="base03" />
                                        <input type="hidden" name="fileExt2" class="form-control" id="ext03" />
                                    </div>
                                </div>
                                <hr/>
                                <div class="form-group">
                                    <label for="message-text" class="col-form-label">Comment:</label>
                                    <textarea name="Comment" class="form-control" id="message-text" required></textarea>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">Save changes</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="attachementModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title" id="exampleModalLabel1"></h2>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div id="attachmentDocs" class="attachmentDocs" data-ride="carousel">
                <ul class=""></ul>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")

<script src="~/Scripts/jquery-ui.js"></script>
<script src="~/Scripts/selectize.min.js"></script>

<script type="text/javascript">
    $(document).ready(function() {
        //This condition will check if form with id 'contact-form' is exist then only form reset code will execute.
        if($('#updateRequest').length>0){
            $('#updateRequest')[0].reset();
        }
    });

    $('[data-toggle="tooltip"]').tooltip();
    $('#startdate').datepicker();
    $('#enddate').datepicker();

    $(".internalStaff").hide();
    $(".employerStaff").hide();
    $(".custodianStaff").hide();
    $(".optionDiv").hide();

    $(document).on('change', '#statusUpdate', function(){
        var selectedStatus = $("#statusUpdate").val();
        if(selectedStatus == "Assigned"){
            $(".optionDiv").show();
            $("#updateRequest input[type='radio']").attr('required', 'true');
        }else{
            $(".optionDiv").hide();
        }
    });

    $(document).on('change', '#updateRequest input', function() {
        var selectedAssignee = $("#updateRequest input[type='radio']:checked").val();
        if(selectedAssignee == "1"){
            $(".internalStaff").show();
            $(".employerStaff").hide();
            $(".custodianStaff").hide();
            $(".internalStaff1").attr('required', 'true');
            $(".employerStaff1").removeAttr('required', 'true');
            $(".custodianStaff1").removeAttr('required', 'true');
        }else if(selectedAssignee == "2"){
            $(".internalStaff").hide();
            $(".employerStaff").show();
            $(".custodianStaff").hide();
            $(".internalStaff1").removeAttr('required', 'true');
            $(".employerStaff1").attr('required', 'true');
            $(".custodianStaff1").removeAttr('required', 'true');
        }else if(selectedAssignee == "3"){
            $(".internalStaff").hide();
            $(".employerStaff").hide();
            $(".custodianStaff").show();
            $(".internalStaff1").removeAttr('required', 'true');
            $(".employerStaff1").removeAttr('required', 'true');
            $(".custodianStaff1").attr('required', 'true');
        }
    });

    $.ajax({
        type: "GET",
        url: "@Url.Action("GetRequestCategory", "ReturnedSchedule")",
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (data) {
            $.each(data, function (index, item) {
                requestData = item;
                jQuery.grep(item, function(requestCategory, i) {
                     $('#requestCategory').append($('<option>', {
                        value: requestCategory.ID,
                        text: requestCategory.Descr
                    }));
                });
            });
        }
    });

    $(document).on("change", "#requestCategory", function(){
        $("#requestCategory").val();
        var result = [];
        for (var i = 0; i < requestData.length; i++)
        {
            //console.log(requestData[i].ID);
            if (requestData[i].ID == $("#requestCategory").val())
            {
                result.push(requestData[i]);
                $('.description').html(requestData[i].Dynamictext);
                documentLinks = requestData[i].Dynamicurl;
                $('.documentLinks').html(documentLinks.replace("~", ", "));
            }
        }
        //console.log(result);
    });

    $.ajax({
        type: "GET",
        url: "@Url.Action("GetExternalUsers", "ReturnedSchedule")",
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (data) {
            $.each(data, function (index, item) {
                $.grep(item, function (user, i){
                        $('#employerStaff1').append($('<option>', {
                            value: user.ID,
                            text: user.FULLNAME +" ("+user.CompanyName +")",
                        }));
                });
            });
        }
    });

    function readURL(input) {
        var iUpload = document.getElementById("iUpload");
        var regex = new RegExp("([a-zA-Z0-9\s_\\.\-:])+(.csv)$");
        if (regex.test(iUpload.value.toLowerCase())){
		    if (input.files && input.files[0]) {
			    var reader = new FileReader();
                var fsize = iUpload.files[0].size;
                var conVertSize = Math.round((fsize / 1024));
                if(conVertSize > "4000"){
                    alert("Document size exceeds 4mb.");
                    $("#iUpload").val("");
                    $('#ext').val("");
                    return false;
                }else{
                    reader.onload = function (e) {
				        $('#falseinput').attr('src', e.target.result);
				        $('#base').val(e.target.result);
                        $('#ext').val($('#iUpload').val().split('.').pop());
			        };
			        reader.readAsDataURL(input.files[0]);
                }
		    }
        }
        else {
            alert("Please select a valid file type.");
            $("#iUpload").val("");
            return false;
        }
	}

    function readURL1(input) {
        var iUpload1 = document.getElementById("iUpload1");
        var regex1 = new RegExp("([a-zA-Z0-9\s_\\.\-:])+(.csv)$");
        if (regex1.test(iUpload1.value.toLowerCase())) {
		    if (input.files && input.files[0]) {
			    var reader1 = new FileReader();
                var fsize1 = iUpload1.files[0].size;
                var conVertSize1 = Math.round((fsize1 / 1024));
                if(conVertSize1 > "4000"){
                    alert("Document size exceeds 4mb.");
                    $("#iUpload1").val("");
                    return false;
                }else{
                    reader1.onload = function (e) {
				        $('#falseinput').attr('src', e.target.result);
				        $('#base1').val(e.target.result);
                        $('#ext1').val($('#iUpload1').val().split('.').pop());
			        };
			        reader1.readAsDataURL(input.files[0]);
                }
		    }
        }
        else {
            alert("Please select a valid file type.");
            $("#iUpload1").val("");
            return false;
        }
	}

    function readURL2(input) {
        var iUpload2 = document.getElementById("iUpload2");
        var regex2 = new RegExp("([a-zA-Z0-9\s_\\.\-:])+(.csv)$");
        if (regex2.test(iUpload2.value.toLowerCase())) {
		    if (input.files && input.files[0]) {
			    var reader2 = new FileReader();
                var fsize2 = iUpload2.files[0].size;
                var conVertSize2 = Math.round((fsize2 / 1024));
                if(conVertSize2 > "4000"){
                    alert("Document size exceeds 4mb.");
                    $("#iUpload2").val("");
                    return false;
                }else{
                    reader2.onload = function (e) {
				        $('#falseinput').attr('src', e.target.result);
				        $('#base2').val(e.target.result);
                        $('#ext2').val($('#iUpload2').val().split('.').pop());
			        };
			        reader2.readAsDataURL(input.files[0]);
                }
		    }
        }
        else {
            alert("Please select a valid file type.");
            $("#iUpload2").val("");
            return false;
        }
	}



    function readURL01(input) {
        var iUpload01 = document.getElementById("iUpload01");
        var regex = new RegExp("([a-zA-Z0-9\s_\\.\-:])+(.csv)$");
        if (regex.test(iUpload01.value.toLowerCase())){
		    if (input.files && input.files[0]) {
			    var reader = new FileReader();
                var fsize = iUpload01.files[0].size;
                var conVertSize = Math.round((fsize / 1024));
                if(conVertSize > "4000"){
                    alert("Document size exceeds 4mb.");
                    $("#iUpload01").val("");
                    $('#ext').val("");
                    return false;
                }else{
                    reader.onload = function (e) {
				        $('#falseinput').attr('src', e.target.result);
				        $('#base01').val(e.target.result);
                        $('#ext01').val($('#iUpload01').val().split('.').pop());
			        };
			        reader.readAsDataURL(input.files[0]);
                }
		    }
        }
        else {
            alert("Please select a valid file type.");
            $("#iUpload01").val("");
            return false;
        }
	}

    function readURL02(input) {
        var iUpload1 = document.getElementById("iUpload02");
        var regex1 = new RegExp("([a-zA-Z0-9\s_\\.\-:])+(.csv)$");
        if (regex1.test(iUpload1.value.toLowerCase())) {
		    if (input.files && input.files[0]) {
			    var reader1 = new FileReader();
                var fsize1 = iUpload1.files[0].size;
                var conVertSize1 = Math.round((fsize1 / 1024));
                if(conVertSize1 > "4000"){
                    alert("Document size exceeds 4mb.");
                    $("#iUpload02").val("");
                    return false;
                }else{
                    reader1.onload = function (e) {
				        $('#falseinput').attr('src', e.target.result);
				        $('#base02').val(e.target.result);
                        $('#ext02').val($('#iUpload01').val().split('.').pop());
			        };
			        reader1.readAsDataURL(input.files[0]);
                }
		    }
        }
        else {
            alert("Please select a valid file type.");
            $("#iUpload02").val("");
            return false;
        }
	}

    function readURL03(input) {
        var iUpload2 = document.getElementById("iUpload03");
        var regex2 = new RegExp("([a-zA-Z0-9\s_\\.\-:])+(.csv)$");
        if (regex2.test(iUpload2.value.toLowerCase())) {
		    if (input.files && input.files[0]) {
			    var reader2 = new FileReader();
                var fsize2 = iUpload2.files[0].size;
                var conVertSize2 = Math.round((fsize2 / 1024));
                if(conVertSize2 > "4000"){
                    alert("Document size exceeds 4mb.");
                    $("#iUpload03").val("");
                    return false;
                }else{
                    reader2.onload = function (e) {
				        $('#falseinput').attr('src', e.target.result);
				        $('#base03').val(e.target.result);
                        $('#ext03').val($('#iUpload03').val().split('.').pop());
			        };
			        reader2.readAsDataURL(input.files[0]);
                }
		    }
        }
        else {
            alert("Please select a valid file type.");
            $("#iUpload03").val("");
            return false;
        }
	}

    var EmployerID = "@Session["EMPLOYER_ID"]";

    $(document).on('click', '.viewdetails', function(){
        var RequestId = $(this).closest('tr').find('td:nth-child(1)').text();
        localStorage.setItem("RequestId", RequestId)
        var RequestStatus = $(this).data('status');
        localStorage.setItem("RequestStatus", RequestStatus);
    });

    var webUserId = "@ViewBag.WebuserID";

    $(document).on('click', '#assignTicket', function(){
        var requestID = $(this).data("id");
        var AssignedId = $(this).data("cid");
        $("#requestId").val(requestID)
        $("#exampleModalLabel").html("Assign Ticket ID:" +requestID);
        localStorage.setItem("AssignedId", AssignedId)
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetInternalUsers", "ReturnedSchedule")",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $.each(data, function (index, item) {
                    $.grep(item, function (user, i){
                       if(user.ID != webUserId && user.ID != AssignedId){
                            $('#internalStaff1').append($('<option>', {
                                    value: user.ID +"|"+user.ROLE_ID,
                                    text: user.FULLNAME
                            }));
                        }
                    });
                });
            }
        });
    });

    $(document).on('click', '#viewAttachement', function(){
        var requestID = $(this).data("id");
        $("#requestId").val(requestID)
        $("#exampleModalLabel1").html("Assign Ticket ID:" +requestID);

        $.ajax({
            type: "GET",
            url: '@Url.Action("GetRequestDocs", "ReturnedSchedule")'+ '?RequestId=' + requestID,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $.each(data, function (index, item) {
                    $.grep(item, function (docs, i){
                        $('.attachmentDocs').html("");
                        if(docs.Doc != ""){
                            $('.attachmentDocs').append(
                                '<li><h5>'+docs.Docname+'</h5></li>'
                            );
                        }else{
                            $('.attachmentDocs').append(
                                '<li><h5>No Attachement</h5></li>'
                            );
                        }
                    });
                });
            }
        });
    });

    $(document).ready(function () {
       $("#EmployerCode").autocomplete({
           minLength: 2,
           source: function(request,response) {
               $.ajax({
                   url: "@Url.Action("GetEmployerCode", "ReturnedSchedule")",
                   type: "POST",
                   dataType: "json",
                   data: { Prefix: request.term },
                   success: function (data) {
                       response($.map(data, function (item) {
                           return { label: item.CompanyName, value: item.EmployerID};
                       }))
                   }
               })
           },
           focus : function(){ return false; }
       }).on('autocompleteresponse autocompleteselect', function( e, ui ){
          var t = $(this),
              details = $('#EmployerCode1'),
              label = ( e.type == 'autocompleteresponse' ? ui.content[0].label :  ui.item.label ),
              value = ( e.type == 'autocompleteresponse' ? ui.content[0].value : ui.item.value );
          t.val( label );
          details.val(value);
          return false;
      });
        //$("#EmployerCode").autocomplete("option", "appendTo", ".ReturnedScheduleForm");
   });

    var narrationSpace = 1;
    function narration_fields() {
        narrationSpace++;
        var objTo = document.getElementById('narration_fields')
        var divtest = document.createElement("div");
	    divtest.setAttribute("class", "form-group removeclass"+narrationSpace);
	    var rdiv = 'removeclass'+narrationSpace;
        divtest.innerHTML = '<div class="row"><div class="col nopadding"><input type="text" class="form-control narration" id="narration" name="narration[]" value="" placeholder="Narration"></div><div class="col nopadding"><input type="text" class="form-control" id="AmountSchedule" name="AmountSchedule[]" value="" placeholder="Amount on schedule"></div><div class="col nopadding"><input type="text" class="form-control" id="AmountReturned" name="AmountReturned[]" value="" placeholder="Amount returned"></div><div class="col nopadding"><button class="btn btn-danger" type="button"  onclick="remove_narration_fields('+ narrationSpace +');"> <span aria-hidden="true"> -- </span> </button></div></div><div class="clear"></div>';
        objTo.appendChild(divtest)
    }

    function remove_narration_fields(rid) {
        $('.removeclass'+rid).remove();
    }

    $(document).on("focus", ".narration", function(){
        $(this).datetimepicker({
            pickerPosition: "bottom left",
            autoclose: 1,
		    format: "MM yyyy",
            //viewMode: "months",
            startView: "3",
            minView: "3",
            maxView: "4"
        });
    });

</script>

